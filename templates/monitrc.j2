#!/usr/bin/env monit

###############################################################################
## Service {{ deploy_application_name }}
###############################################################################
##
## Check general system resources such as load average, cpu and memory
## usage. Each test specifies a resource, conditions and the action to be
## performed should a test fail.

{% for val in deploy_monitor.param_values %}

check process {{ deploy_application_name }}-worker-{{ val }} with pidfile "{{ deploy_pids_dir }}/{{ deploy_application_name }}-{{ val }}.pid"
  group {{ deploy_application_name }}
  start program = "/sbin/start {{ deploy_application_name }}-worker {{ deploy_monitor.param_name }}={{ val }}"
  stop  program = "/sbin/stop  {{ deploy_application_name }}-worker {{ deploy_monitor.param_name }}={{ val }}"
  {% for test in deploy_monitor.tests %}
{% if test.type == 'mem' %}
    if mem usage > {{ test.more }}
      {% if test.cycles is defined %} for {{ test.cycles }} cycles {% endif %} then {{ test.action }}
{% elif test.type == 'cpu' %}
    if cpu usage > {{ test.more }}
      {% if test.cycles is defined %} for {{ test.cycles }} cycles {% endif %} then {{ test.action }}
{% elif test.type == 'param_port' %}
    if failed port {{ val }} protocol {{ test.protocol }}
      request {{ test.endpoint }}{% if test.host is defined %} with hostheader "{{ test.host }}"{% endif %} 
      with timeout {{ test.timeout }}
      then {{ test.action }}
{% endif %}
  {% endfor %}

{% endfor %}
